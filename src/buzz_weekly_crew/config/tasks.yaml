extract_articles_task:
  description: >
    Use the extract_articles_task to get the content of the first {number-of-articles-from-each-feed} articles from each feed in the this list: {rss-feeds}
  expected_output: >
    A json object containing a number of selected articles

select_articles_task:
  description: >
    From the list of articles, select the top {number-of-articles-in-blog-post} most interesting articles.  Mix them up in order, with the most interesting article first. It is important that the topic of the article is clearly about these topics: {topics}
  expected_output: >
    A json object containing a number of selected articles

format_task:
  description: >
    Compile the summaries into a well-formatted text suitable for publishing. The text will be published in the weekly blog called {blog-name}. 
    Your final answer MUST include a formatted document in Markdown with the following format:
    
    1. Start with a title for this week's newsletter that is fun and compelling, and summarises the articles in the newsletter. Title should not be obviously generated by an LLM, and just reflect the selected articles. No big made up words, no colons etc. 
    2. Continue with a text that in a 4-5 sentences summarizes all the articles.
    3. Then include all the articles in the following format for each article. 
    4. End with a text summarizing the content of this weeks selected articles and also thanking the readers for reading, wish them a great weekend and encourage them to read also next week.

    So the end result should have this format:

    ###TITLE FOR THIS WEEKS NEWSLETTER
    SUMMARY OF THIS WEEKS NEWSLETTER CONTENT

    (fore each article use this format below)
    ## TITLE (rewritten in a more compelling way for readers), (new row)
    _PUBLISHED DATE_ (on new line, in italic, format like 16 July, 2024. Replace with the actual date, no need for writing Published date:)
    (blank row)
    DESCRIPTION (on new line rewritten in a more compelling way for readers)
    (blank row)
    [Read the story](article-link)

    ---

    (End summary text goes here where we thank the readers for reading, wish them a great weekend and encourage them to read also next week.)

    BR,
    {blog-name}
  expected_output: >
    A markdown document with a compelling title, a brief summary of all articles, followed by the articles formatted as specified.
    
create_medium_draft_task:
  description: >
    Publish the content in a medium draft post. Call the create_medium_draft_post with these properties title (string), content (string) and tags (list) like this:
    create_medium_draft_post("title": "The post title", "content": "The post content", "tags": "The tags ").
  expected_output: >
    The result from call to create_medium_draft_post